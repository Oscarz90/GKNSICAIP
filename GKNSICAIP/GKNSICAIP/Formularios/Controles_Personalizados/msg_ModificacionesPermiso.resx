<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>