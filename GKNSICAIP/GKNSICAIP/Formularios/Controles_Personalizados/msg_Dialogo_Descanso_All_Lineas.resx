<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>