<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
  <data name="btnMatch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AMkzS6Z1+EFVAAAAAElFTkSuQmCC
</value>
  </data>
</root>